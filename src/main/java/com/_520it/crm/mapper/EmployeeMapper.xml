<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="inputTime" property="inputtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="admin" property="admin" jdbcType="BIT" />
	<association property="dept" javaType="Department" columnPrefix="dept_">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
	</association>

  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="Employee" useGeneratedKeys="true" keyProperty="id" >
    insert into employee (username, realName, password, 
      tel, email, dept_id, 
      inputTime, state, admin)
    values (#{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{dept.id,jdbcType=BIGINT}, 
      #{inputtime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="Employee" >
    update employee
    set username = #{username,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{dept.id,jdbcType=BIGINT},
      inputTime = #{inputtime,jdbcType=TIMESTAMP},
     
      admin = #{admin,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  
  <update id="changeState" parameterType="long" >
    update employee
    set state = 0
    where id = #{id}
  </update>
  
  <sql id="fieldSql">
  	e.id, e.username, e.realName, e.password, e.tel, e.email,  e.inputTime, e.state, e.admin, 
  	d.id as dept_id,d.name as dept_name 
  </sql>
  
  
  <!-- 通过内联的方式 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    select <include refid="fieldSql"/>
    from employee e left join department d on e.dept_Id=d.id
    where e.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
      select <include refid="fieldSql"/>
  	  from employee e left join department d on e.dept_Id=d.id
  </select>
  
  
  <sql id="conditionSql">
  <where>
			<if test="keyword!=null and !keyword.equals(&quot;&quot;)">
				and e.username like concat('%',#{keyword},'%') 
				or e.realName like concat('%',#{keyword},'%')
				or e.email like concat('%',#{keyword},'%')
			</if>
			<if test="beginDate!=null">
				and e.inputTime &gt; #{beginDate}
			</if>
			<if test="endDate!=null">
				and e.inputTime &lt;= ADDDATE(DATE_FORMAT(#{endDate},'%Y-%m-%d'),interval 1 day) 
			</if>
			<if test="state!=null">
				and e.state = #{state}
			</if>
		</where>
  </sql>
  
  <select id="selectByConditionCount" resultType="long">
  	select count(*) from employee e <include refid="conditionSql"/>
  </select>
  
  
  <select id="selectByCondition" resultMap="BaseResultMap">
  	select <include refid="fieldSql"/> from employee e left join department d on e.dept_id=d.id 
  	<include refid="conditionSql"/>
  		limit #{start},#{rows}
  </select>
  
  <select id="queryByLogin" resultMap="BaseResultMap">
  	select <include refid="fieldSql"/> from employee e left join department d on e.dept_id=d.id 
  	where e.username=#{username} and e.password=#{password}
  </select>
  
</mapper>